# tye application configuration file
# read all about it at https://github.com/dotnet/tye
#
# when you've given us a try, we'd love to know what you think:
#    https://aka.ms/AA7q20u
#
name: dapr
extensions:
- name: dapr

  # log-level configures the log level of the dapr sidecar
  log-level: debug

  # config allows you to pass additional configuration into the dapr sidecar
  # config will be interpreted as a named k8s resource when deployed, and will be interpreted as
  # a file on disk when running locally at `./components/myconfig.yaml`
  #
  # config: myconfig

  # components-path configures the components path of the dapr sidecar
  components-path: "./components/"

  # If not using the default Dapr placement service or otherwise using a placement service on a nonstandard port,
  # you can configure the Dapr sidecar to use an explicit port.
  # placement-port: 6050
services:
- name: service-a
  project: src/ServiceA/ServiceA.csproj
- name: service-b
  project: src/ServiceB/ServiceB.csproj
- name: app
  project: src/App/App.csproj
- name: state-service
  project: src/StateService/StateService.csproj
- name: worker-service
  project: src/WorkerService/WorkerService.csproj
- name: pub-service
  project: src/PubService/PubService.csproj
- name: sub-service
  project: src/SubService/SubService.csproj
- name: sub-service2
  project: src/SubService2/SubService2.csproj

# This may conflict with the redis instance that dapr manages.
#
# Doing a `docker ps` can show if its already running. If that's the case
# then comment out out when running locally.
# - name: redis
#   image: redis
#   bindings:
#   - port: 6379
